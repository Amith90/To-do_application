name: GitOpsflow

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      
      - name: Build and push Docker image
        run: |
          version="build-${GITHUB_RUN_NUMBER}"
          echo $version
          docker build -t amith90/todo-app:$version .
          docker push amith90/todo-app:$version

  update_manifest:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Update Manifest file
        uses: actions/checkout@v3
        
        with:
          repository: Amith90/kube_manifest
          ref: acfeaa36638afd51202db3ce4c9bab8fd9b02a5f  # specify the commit hash or branch/tag
          path: kube_manifest  # Specify the directory for checkout
      
      - name: Perform operations on the repository
        run: |
          TAG=$((GITHUB_RUN_NUMBER - 1))
          echo "TAG: $TAG"
          cd kube_manifest
          pwd  # Print the current working directory for debugging
          ls -R  # List the contents of the directory for debugging purposes
          sed -i "s/build-.*/build-$TAG/g" manifest/deployment.yaml  # Use the correct path to deployment.yaml
          git config --global user.email "amithkarunaratne@gmail.com"
          git config --global user.name "Amith90"
          git add .
          git commit -m "new build with imgTag build-$TAG"
          git push -q origin main
      